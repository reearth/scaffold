name: ci
on:
  push:
    branches: [main, release]
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      changed_web: ${{ steps.web.outputs.any_modified }}
      changed_server: ${{ steps.server.outputs.any_modified }}
      build: ${{ steps.prepare.outputs.build }}
      sha_short: ${{ steps.prepare.outputs.sha_short }}
      new_tag: ${{ steps.prepare.outputs.new_tag }}
      new_tag_short: ${{ steps.prepare.outputs.new_tag_short }}
      name: ${{ steps.prepare.outputs.name }}
    steps:
      - uses: reearth/actions/.github/actions/prepare-build@main
        id: prepare
        with:
          repo: ${{ vars.REPO }}
          # checkout: true
      - name: changed files for web
        id: web
        uses: tj-actions/changed-files@v45
        with:
          files: |
            web/**
            .github/workflows/ci.yml
            .github/workflows/ci-web.yml

      - name: changed files for server
        id: server
        uses: tj-actions/changed-files@v45
        with:
          files: |
            server/**
            .github/workflows/ci.yml
            .github/workflows/ci-server.yml

  ci-web:
    needs: prepare
    if: needs.prepare.outputs.changed_web == 'true'
    uses: ./.github/workflows/ci-web.yml

  ci-server:
    needs: prepare
    if: needs.prepare.outputs.changed_server == 'true'
    uses: ./.github/workflows/ci-server.yml

  ci:
    runs-on: ubuntu-latest
    needs:
      - ci-web
      - ci-server
    if: ${{ !failure() }}
    steps:
      - run: echo OK

  build-web:
    needs: prepare
    if: needs.prepare.outputs.build && needs.prepare.outputs.changed_web == 'true'
    uses: reearth/actions/.github/workflows/build-docker.yml@main
    with:
      image: ${{ vars.IMAGE_WEB }}
      context: web
      use_dockerhub: false
      name: ${{ needs.prepare.outputs.name }}
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build-server:
    needs: prepare
    if: needs.prepare.outputs.build && needs.prepare.outputs.changed_server == 'true'
    uses: reearth/actions/.github/workflows/build-docker.yml@main
    with:
      image: ${{ vars.IMAGE_SERVER }}
      context: server
      use_dockerhub: false
      name: ${{ needs.prepare.outputs.name }}
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs:
      - build-web
      - build-server
    if: ${{ !failure() }}
    steps:
      - run: echo OK

  # deploy-web:
  #   needs: [build, ci-web]
  #   if: needs.ci-web.result == 'success'
  #   uses: eearth/actions/.github/workflows/deploy-cloudrun.yml@main
  #   with:
  #     name: ${{ vars.SERVICE_NAME_WEB }}
  #     image: ${{ vars.IMAGE_WEB }}
  #     region: ${{ vars.REGION }}
  #   secrets:
  #     GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}
  #     GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  #     GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

  # deploy-server:
  #   needs: [build, ci-server]
  #   if: needs.ci-server.result == 'success'
  #   uses: eearth/actions/.github/workflows/deploy-cloudrun.yml@main
  #   with:
  #     name: ${{ vars.SERVICE_NAME_WEB }}
  #     image: ${{ vars.IMAGE_WEB }}
  #     region: ${{ vars.REGION }}
  #   secrets:
  #     GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}
  #     GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  #     GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
