name: ci
on:
  push:
    branches: [main, release]
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      changed_server: ${{ steps.server.outputs.any_modified }}
      changed_web: ${{ steps.web.outputs.any_modified }}
      build: ${{ steps.prepare.outputs.build }}
      sha_short: ${{ steps.prepare.outputs.sha_short }}
      new_tag: ${{ steps.prepare.outputs.new_tag }}
      new_tag_short: ${{ steps.prepare.outputs.new_tag_short }}
      name: ${{ steps.prepare.outputs.name }}
    steps:
      - uses: reearth/actions/prepare-build@b63f7da8796f4514712947e1a4902994be29e3d9
        id: prepare
        with:
          repo: ${{ vars.REPO }}
      - name: changed files for server
        id: server
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
        with:
          files: |
            server/**
            .github/workflows/ci.yml
            .github/workflows/ci-server.yml
      - name: changed files for web
        id: web
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
        with:
          files: |
            web/**
            .github/workflows/ci.yml
            .github/workflows/ci-web.yml

  ci-server:
    needs: prepare
    if: needs.prepare.outputs.changed_server == 'true'
    uses: ./.github/workflows/ci-server.yml

  ci-web:
    needs: prepare
    if: needs.prepare.outputs.changed_web == 'true'
    uses: ./.github/workflows/ci-web.yml

  build-server:
    needs: [prepare, ci-server]
    if: needs.prepare.outputs.build && needs.prepare.outputs.changed_server == 'true'
    uses: reearth/actions/.github/workflows/build-docker.yml@b63f7da8796f4514712947e1a4902994be29e3d9
    with:
      image: ${{ vars.IMAGE_SERVER }}
      context: server
      use_dockerhub: false
      name: ${{ needs.prepare.outputs.name }}
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build-web:
    needs: [prepare, ci-web]
    if: needs.prepare.outputs.build && needs.prepare.outputs.changed_web == 'true'
    uses: reearth/actions/.github/workflows/build-docker.yml@b63f7da8796f4514712947e1a4902994be29e3d9
    with:
      image: ${{ vars.IMAGE_WEB }}
      context: web
      use_dockerhub: false
      name: ${{ needs.prepare.outputs.name }}
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build-web-pr:
    needs: [prepare, ci-web]
    if:  ${{ needs.prepare.outputs.build && needs.prepare.outputs.changed_web == 'true' && github.event_name == 'pull_request' && github.base_ref == 'main' && (github.event.action == 'opened' || github.event.action == 'synchronize') }}
    uses: reearth/actions/.github/workflows/build-docker.yml@b63f7da8796f4514712947e1a4902994be29e3d9
    with:
      image: ${{ vars.IMAGE_WEB }}
      context: web
      use_dockerhub: false
      name: ${{ needs.prepare.outputs.sha_short }}
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy-web-pr:
    needs: [build-web-pr, prepare]
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.deploy.outputs.url }}
    permissions:
      contents: read
      id-token: write
      issues: write
      pull-requests: write
    steps:
      - uses: reearth/actions/deploy-cloud-run-with-tag@b63f7da8796f4514712947e1a4902994be29e3d9 # main
        id: deploy
        with:
          image: ${{ needs.build-web-pr.outputs.image }}
          image_internal: '${{ secrets.GC_REGION }}-docker.pkg.dev/${{ secrets.GC_PROJECT_ID }}/reearth/reearth-scaffold-web:${{ needs.prepare.outputs.sha_short }}'
          region: ${{ secrets.GC_REGION }}
          service: reearth-scaffold-web
          service_account: ${{ secrets.GC_SA_EMAIL }}
          tag: pr-${{ github.event.pull_request.number }}
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}

  deploy-server:
    needs: [build-server]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: reearth/actions/deploy-cloud-run@b63f7da8796f4514712947e1a4902994be29e3d9
        with:
          service: reearth-scaffold-api
          image: ${{ needs.build-server.outputs.image }}
          image_internal: '${{ secrets.GC_REGION }}-docker.pkg.dev/${{ secrets.GC_PROJECT_ID }}/reearth/reearth-scaffold-api:latest'
          region: ${{ secrets.GC_REGION }}
          service_account: ${{ secrets.GC_SA_EMAIL }}
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}

  deploy-web:
    needs: [build-web]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: reearth/actions/deploy-cloud-run@b63f7da8796f4514712947e1a4902994be29e3d9
        with:
          service: reearth-scaffold-web
          image: ${{ needs.build-web.outputs.image }}
          image_internal: '${{ secrets.GC_REGION }}-docker.pkg.dev/${{ secrets.GC_PROJECT_ID }}/reearth/reearth-scaffold-web:latest'
          region: ${{ secrets.GC_REGION }}
          service_account: ${{ secrets.GC_SA_EMAIL }}
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
