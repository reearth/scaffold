name: ci
on:
  push:
    branches: [main, release]
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      changed_server: ${{ steps.server.outputs.any_modified }}
      changed_web: ${{ steps.web.outputs.any_modified }}
      build: ${{ steps.prepare.outputs.build }}
      sha_short: ${{ steps.prepare.outputs.sha_short }}
      new_tag: ${{ steps.prepare.outputs.new_tag }}
      new_tag_short: ${{ steps.prepare.outputs.new_tag_short }}
      name: ${{ steps.prepare.outputs.name }}
    steps:
      - uses: reearth/actions/prepare-build@main
        id: prepare
        with:
          repo: ${{ vars.REPO }}
      - name: changed files for server
        id: server
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files: |
            server/**
            .github/workflows/ci.yml
            .github/workflows/ci-server.yml
      - name: changed files for web
        id: web
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46
        with:
          files: |
            web/**
            .github/workflows/ci.yml
            .github/workflows/ci-web.yml

  ci-server:
    needs: prepare
    if: needs.prepare.outputs.changed_server == 'true'
    uses: ./.github/workflows/ci-server.yml

  ci-web:
    needs: prepare
    if: needs.prepare.outputs.changed_web == 'true'
    uses: ./.github/workflows/ci-web.yml

  ci:
    runs-on: ubuntu-latest
    needs:
      - ci-server
      - ci-web
    if: ${{ !failure() }}
    steps:
      - run: echo OK

  build-server:
    needs: prepare
    if: needs.prepare.outputs.build && needs.prepare.outputs.changed_server == 'true'
    uses: reearth/actions/.github/workflows/build-docker.yml@main
    with:
      image: ${{ vars.IMAGE_SERVER }}
      context: server
      use_dockerhub: false
      name: ${{ needs.prepare.outputs.name }}
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build-web:
    needs: prepare
    # if: needs.prepare.outputs.build && needs.prepare.outputs.changed_web == 'true'
    uses: reearth/actions/.github/workflows/build-docker.yml@main
    with:
      image: ${{ vars.IMAGE_WEB }}
      context: web
      use_dockerhub: false
      name: nightly
      new_tag: ${{ needs.prepare.outputs.new_tag }}
      new_tag_short: ${{ needs.prepare.outputs.new_tag_short }}
      sha_short: ${{ needs.prepare.outputs.sha_short }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs:
      - build-web
      - build-server
    if: ${{ success() }}
    steps:
      - run: echo OK

  # deploy-server:
  #   needs: [build, build-server, ci-server]
  #   if: needs.ci-server.result == 'success'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: reearth/actions/deploy-cloud-run@main
  #       with:
  #         service: ${{ vars.SERVICE_NAME_API }}
  #         image: ${{ needs.build-server.outputs.image }}
  #         region: ${{ vars.REGION }}
  #         service_account: ${{ secrets.GCP_SA_EMAIL }}
  #         workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  # deploy-web:
  #   needs: [build, build-web, ci-web]
  #   if: needs.ci-web.result == 'success'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: reearth/actions/deploy-cloud-run@main
  #       with:
  #         service: ${{ vars.SERVICE_NAME_WEB }}
  #         image: ${{ needs.build-web.outputs.image }}
  #         region: ${{ vars.REGION }}
  #         service_account: ${{ secrets.GCP_SA_EMAIL }}
  #         workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
