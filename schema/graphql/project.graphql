type Project implements Node {
  id: ID!
  workspaceID: ID!
  name: String!
  todos(filter: TodoFilter!): TodoConnection!
  workspace: Workspace @goField(forceResolver: true)
}

type ProjectConnection {
  pageInfo: PageInfo!
  edges: [ProjectEdge!]!
}

type ProjectEdge {
  cursor: Cursor!
  node: Project!
}

input ProjectFilter {
  workspaceID: ID
  first: Int
  last: Int
  after: Cursor
  before: Cursor
}

extend type Query {
  projects(filter: ProjectFilter!): ProjectConnection!
}

input CreateProjectInput {
  workspaceID: ID!
  name: String!
}

input UpdateProjectInput {
  id: ID!
  name: String
}

extend type Mutation {
  createProject(input: CreateProjectInput!): Project!
  updateProject(input: UpdateProjectInput!): Project!
  deleteProject(projectId: ID!): ID!
}
