type Todo implements Node {
  id: ID!
  projectId: ID!
  name: String!
  done: Boolean!
  createdAt: Time!
  updatedAt: Time!
  project: Project @goField(forceResolver: true)
}

type TodoConnection {
  pageInfo: PageInfo!
  edges: [TodoEdge!]
}

type TodoEdge {
  cursor: String!
  node: Todo!
}

input TodoFilter {
  projectId: ID
  first: Int
  last: Int
  after: Cursor
  before: Cursor
}

input CreateTodoInput {
  projectId: ID!
  name: String!
}

input UpdateTodoInput {
  id: ID!
  name: String
  done: Boolean
}

extend type Query {
  todos(filter: TodoFilter!): TodoConnection!
}

extend type Mutation {
  createTodo(input: CreateTodoInput!): Todo!
  updateTodo(input: UpdateTodoInput!): Todo!
  deleteTodo(todoId: ID!): ID!
}
