package gql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"

	"github.com/reearth/scaffold/server/internal/transport/gql/gqlmodel"
)

// CreateWorkspace is the resolver for the createWorkspace field.
func (r *mutationResolver) CreateWorkspace(ctx context.Context, input gqlmodel.CreateWorkspaceInput) (*gqlmodel.Workspace, error) {
	panic(fmt.Errorf("not implemented: CreateWorkspace - createWorkspace"))
}

// UpdateWorkspace is the resolver for the updateWorkspace field.
func (r *mutationResolver) UpdateWorkspace(ctx context.Context, input gqlmodel.UpdateWorkspaceInput) (*gqlmodel.Workspace, error) {
	panic(fmt.Errorf("not implemented: UpdateWorkspace - updateWorkspace"))
}

// DeleteWorkspace is the resolver for the deleteWorkspace field.
func (r *mutationResolver) DeleteWorkspace(ctx context.Context, workspaceID gqlmodel.ID) (gqlmodel.ID, error) {
	panic(fmt.Errorf("not implemented: DeleteWorkspace - deleteWorkspace"))
}

// AddWorkspaceMember is the resolver for the addWorkspaceMember field.
func (r *mutationResolver) AddWorkspaceMember(ctx context.Context, input gqlmodel.AddWorkspaceMemberInput) (*gqlmodel.WorkspaceMember, error) {
	panic(fmt.Errorf("not implemented: AddWorkspaceMember - addWorkspaceMember"))
}

// UpdateWorkspaceMemberRole is the resolver for the updateWorkspaceMemberRole field.
func (r *mutationResolver) UpdateWorkspaceMemberRole(ctx context.Context, input gqlmodel.UpdatwWorkspaceMemberInput) (*gqlmodel.WorkspaceMember, error) {
	panic(fmt.Errorf("not implemented: UpdateWorkspaceMemberRole - updateWorkspaceMemberRole"))
}

// RemoveWorkspaceMember is the resolver for the removeWorkspaceMember field.
func (r *mutationResolver) RemoveWorkspaceMember(ctx context.Context, workspaceID gqlmodel.ID, userID gqlmodel.ID) (gqlmodel.ID, error) {
	panic(fmt.Errorf("not implemented: RemoveWorkspaceMember - removeWorkspaceMember"))
}

// Workspaces is the resolver for the workspaces field.
func (r *queryResolver) Workspaces(ctx context.Context) ([]*gqlmodel.Workspace, error) {
	panic(fmt.Errorf("not implemented: Workspaces - workspaces"))
}
