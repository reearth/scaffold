// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gqlmodel

type Node interface {
	IsNode()
	GetID() ID
}

type Asset struct {
	ID        ID       `json:"id"`
	ProjectID ID       `json:"projectId"`
	Name      string   `json:"name"`
	Project   *Project `json:"project,omitempty"`
}

func (Asset) IsNode()        {}
func (this Asset) GetID() ID { return this.ID }

type AssetConnection struct {
	PageInfo *PageInfo    `json:"pageInfo"`
	Edges    []*AssetEdge `json:"edges,omitempty"`
}

type AssetEdge struct {
	Cursor string `json:"cursor"`
	Node   *Asset `json:"node"`
}

type AssetFilter struct {
	ProjectID *ID     `json:"projectId,omitempty"`
	First     *int32  `json:"first,omitempty"`
	Last      *int32  `json:"last,omitempty"`
	After     *string `json:"after,omitempty"`
	Before    *string `json:"before,omitempty"`
}

type CreateAssetInput struct {
	ProjectID ID     `json:"projectId"`
	Name      string `json:"name"`
}

type Mutation struct {
}

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor,omitempty"`
	EndCursor       *string `json:"endCursor,omitempty"`
}

type Project struct {
	ID          ID               `json:"id"`
	WorkspaceID ID               `json:"workspaceID"`
	Name        string           `json:"name"`
	Assets      *AssetConnection `json:"assets"`
}

func (Project) IsNode()        {}
func (this Project) GetID() ID { return this.ID }

type Query struct {
}

type UpdateAssetInput struct {
	AssetID ID      `json:"assetId"`
	Name    *string `json:"name,omitempty"`
}
